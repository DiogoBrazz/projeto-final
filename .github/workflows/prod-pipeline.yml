name: Deploy to Production (GKE)

on:
  workflow_dispatch:

jobs:
  # Este job agora tem um único objetivo: criar a infraestrutura.
  terraform:
    name: 'Terraform IaC (Infra as Code)'
    runs-on: ubuntu-latest
    
    env:
      GCP_PROJECT_ID: "festive-post-461507-v9"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Passo 1: Apenas escreve a chave num ficheiro num local conhecido.
    - name: Preparar Chave de Autenticação do GCP
      id: sa-key
      run: echo '${{ secrets.GCP_SA_KEY_PROD }}' > ${{ github.workspace }}/gcloud-key.json

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Passo 2: O Terraform é inicializado, passando a chave explicitamente.
    - name: Terraform Init (Conecta ao bucket)
      id: init
      run: terraform init -input=false
      working-directory: ./terraform
      env:
        # <<< A MÁGICA ACONTECE AQUI: Fornecemos o caminho da chave diretamente ao comando.
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcloud-key.json

    # Passo 3: O Terraform aplica as mudanças, também recebendo a chave explicitamente.
    - name: Terraform Apply (Cria/Atualiza o cluster)
      id: apply
      run: terraform apply -auto-approve
      working-directory: ./terraform
      env:
        # <<< E fornecemos novamente para garantir.
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcloud-key.json

  # Os outros jobs (test, build-and-push, deploy) podem continuar como estavam.
  # No entanto, o job de 'deploy' também precisará de um passo de autenticação.
  # Vamos focar em fazer o Terraform passar primeiro.

  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Instalar dependências do Backend
        working-directory: ./backend
        run: npm install
      - name: Rodar testes do Backend
        working-directory: ./backend
        run: npm test

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    env:
      GCP_PROJECT_ID: "festive-post-461507-v9"
      GCP_REGION: us-central1
      ARTIFACT_REPO: projeto-final-imagens
      IMAGE_BACKEND: lista-itens-backend
      IMAGE_FRONTEND: lista-itens-frontend
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Autenticar no Google Cloud e Configurar Docker
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}
      - name: Configurar Docker Helper
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev
      - name: Build e Push do Backend
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_BACKEND }}:${{ github.sha }} ./backend
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_BACKEND }}:${{ github.sha }}
      - name: Build e Push do Frontend
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_FRONTEND }}:${{ github.sha }} ./frontend
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}

  deploy:
    name: Deploy to GKE Production
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      GCP_PROJECT_ID: "festive-post-461507-v9"
      GKE_CLUSTER: "prod-cluster" 
      GKE_ZONE: us-central1-a
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}
      - name: Conectar ao cluster GKE
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}
      - name: Substituir a Tag da Imagem nos Deployments
        run: |
          sed -i 's|lista-itens-backend:.*|lista-itens-backend:${{ github.sha }}|g' ./arquivos/backend-config/backend-deployment.yaml
          sed -i 's|lista-itens-frontend:.*|lista-itens-frontend:${{ github.sha }}|g' ./arquivos/frontend-config/frontend-deployment.yaml
      - name: Deploy no Kubernetes
        run: |
          echo "INFO: Aplicando namespaces primeiro..."
          find ./arquivos -name "namespaces.yaml" -exec kubectl apply -f {} \;
          
          echo "INFO: Aguardando 5 segundos para a propagação dos namespaces..."
          sleep 5
          
          echo "INFO: Aplicando os outros recursos..."
          kubectl apply -R -f ./arquivos/
